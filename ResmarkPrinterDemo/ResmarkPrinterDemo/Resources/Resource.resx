<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddPrinter" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="RemovePrinter" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="ScanPrinters" xml:space="preserve">
    <value>Scan Printers</value>
  </data>
  <data name="SendToAll" xml:space="preserve">
    <value>Send to All</value>
  </data>
  <data name="PrinterIP" xml:space="preserve">
    <value>Printer IP</value>
  </data>
  <data name="PrintCount" xml:space="preserve">
    <value>Print Count</value>
  </data>
  <data name="MessageFile" xml:space="preserve">
    <value>Message File (XML)</value>
  </data>
  <data name="SearchStatus" xml:space="preserve">
    <value>Searching network...</value>
  </data>
  <data name="StatusReady" xml:space="preserve">
    <value>Status: ready</value>
  </data>
  <data name="FoundPrinters" xml:space="preserve">
    <value>{0} printers found.</value>
  </data>
  <data name="ConnectionFailed" xml:space="preserve">
    <value>Connection failed</value>
  </data>
  <data name="SelectMessage" xml:space="preserve">
    <value>Please select a message first.</value>
  </data>
  <data name="EditVariables" xml:space="preserve">
    <value>Edit Variables</value>
  </data>
  <data name="EditGroupVariables" xml:space="preserve">
    <value>Variables (Group)</value>
  </data>
  <data name="NoPrintersFound" xml:space="preserve">
    <value>No new printers found</value>
  </data>
  <data name="Printers" xml:space="preserve">
    <value>Printers</value>
  </data>
  <data name="Groups" xml:space="preserve">
    <value>Printer groups</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="StatusEditVariables" xml:space="preserve">
    <value>Variable editor opened.</value>
  </data>
  <data name="StatusPause" xml:space="preserve">
    <value>Printing paused.</value>
  </data>
  <data name="StatusResume" xml:space="preserve">
    <value>Printing resumed.</value>
  </data>
  <data name="StatusSelectMessage" xml:space="preserve">
    <value>Stored message sent.</value>
  </data>
  <data name="StatusSendMessage" xml:space="preserve">
    <value>Sending message to all printers…</value>
  </data>
  <data name="StatusStop" xml:space="preserve">
    <value>Printing stopped.</value>
  </data>
  <data name="StatusPrinterAdded" xml:space="preserve">
    <value>Printer added.</value>
  </data>
  <data name="StatusPrinterRemoved" xml:space="preserve">
    <value>Printer removed.</value>
  </data>
  <data name="StatusSending" xml:space="preserve">
    <value>Sending message to all printers…</value>
  </data>
  <data name="StatusSent" xml:space="preserve">
    <value>Message has been sent.</value>
  </data>
  <data name="AvailableMessages" xml:space="preserve">
    <value>Available messages</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="StatusRefreshed" xml:space="preserve">
    <value>Status refreshed</value>
  </data>
  <data name="PreviewTitle" xml:space="preserve">
    <value>Message Preview</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="PrintSuccess" xml:space="preserve">
    <value>Message was sent to printer successfully.</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="ErrorPreview" xml:space="preserve">
    <value>Failed to load preview image.</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>The file does not exist.</value>
  </data>
  <data name="MessageSaved" xml:space="preserve">
    <value>Message saved:</value>
  </data>
  <data name="ErrorRecall" xml:space="preserve">
    <value>Failed to recall or save message:</value>
  </data>
  <data name="ErrorEmptyRecall" xml:space="preserve">
    <value>The message is empty or could not be recalled.</value>
  </data>
  <data name="ConfigTitle" xml:space="preserve">
    <value>Print Head Configuration</value>
  </data>
  <data name="ConfigSaveButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ConfigCancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ConfigSaved" xml:space="preserve">
    <value>Configuration saved.</value>
  </data>
  <data name="ConfigSaveError" xml:space="preserve">
    <value>Failed to save configuration.</value>
  </data>
  <data name="ConfigLoadError" xml:space="preserve">
    <value>Failed to load configuration.</value>
  </data>
  <data name="DeleteTitle" xml:space="preserve">
    <value>Delete Message</value>
  </data>
  <data name="ConfirmDeleteMessage" xml:space="preserve">
    <value>Are you sure you want to delete the file "{0}"?</value>
  </data>
  <data name="DeleteSuccess" xml:space="preserve">
    <value>The file was successfully deleted.</value>
  </data>
  <data name="DeleteError" xml:space="preserve">
    <value>Could not delete the file: {0}</value>
  </data>
  <data name="ConfigDangerPrompt" xml:space="preserve">
    <value>Warning: Invalid entries in this configuration may cause system malfunction. Do you really want to continue?</value>
  </data>
  <data name="VariablesSaved" xml:space="preserve">
  <value>Variables saved.</value>
</data>
  <data name="Done" xml:space="preserve">
  <value>Done</value>
</data>
  <data name="GroupVariablesTitle" xml:space="preserve">
  <value>Group Variables</value>
</data>
  <data name="VariablesTitle" xml:space="preserve">
  <value>Variables – {0}</value>
</data>

</root>